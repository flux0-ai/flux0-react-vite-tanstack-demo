/* eslint-disable */

// @ts-nocheck

// noinspection JSUnusedGlobalSymbols

// This file was automatically generated by TanStack Router.
// You should NOT make any changes in this file as it will be overwritten.
// Additionally, you should also exclude this file from your linter and/or formatter to prevent it from being checked or modified.

import { Route as rootRouteImport } from './routes/__root'
import { Route as ChatLayoutRouteImport } from './routes/_chat/_layout'
import { Route as ChatLayoutIndexRouteImport } from './routes/_chat/_layout/index'
import { Route as ChatLayoutSessionSessionIdRouteImport } from './routes/_chat/_layout/session/$sessionId'

const ChatLayoutRoute = ChatLayoutRouteImport.update({
  id: '/_chat/_layout',
  getParentRoute: () => rootRouteImport,
} as any)
const ChatLayoutIndexRoute = ChatLayoutIndexRouteImport.update({
  id: '/',
  path: '/',
  getParentRoute: () => ChatLayoutRoute,
} as any)
const ChatLayoutSessionSessionIdRoute =
  ChatLayoutSessionSessionIdRouteImport.update({
    id: '/session/$sessionId',
    path: '/session/$sessionId',
    getParentRoute: () => ChatLayoutRoute,
  } as any)

export interface FileRoutesByFullPath {
  '/': typeof ChatLayoutIndexRoute
  '/session/$sessionId': typeof ChatLayoutSessionSessionIdRoute
}
export interface FileRoutesByTo {
  '/': typeof ChatLayoutIndexRoute
  '/session/$sessionId': typeof ChatLayoutSessionSessionIdRoute
}
export interface FileRoutesById {
  __root__: typeof rootRouteImport
  '/_chat/_layout': typeof ChatLayoutRouteWithChildren
  '/_chat/_layout/': typeof ChatLayoutIndexRoute
  '/_chat/_layout/session/$sessionId': typeof ChatLayoutSessionSessionIdRoute
}
export interface FileRouteTypes {
  fileRoutesByFullPath: FileRoutesByFullPath
  fullPaths: '/' | '/session/$sessionId'
  fileRoutesByTo: FileRoutesByTo
  to: '/' | '/session/$sessionId'
  id:
    | '__root__'
    | '/_chat/_layout'
    | '/_chat/_layout/'
    | '/_chat/_layout/session/$sessionId'
  fileRoutesById: FileRoutesById
}
export interface RootRouteChildren {
  ChatLayoutRoute: typeof ChatLayoutRouteWithChildren
}

declare module '@tanstack/react-router' {
  interface FileRoutesByPath {
    '/_chat/_layout': {
      id: '/_chat/_layout'
      path: ''
      fullPath: ''
      preLoaderRoute: typeof ChatLayoutRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/_chat/_layout/': {
      id: '/_chat/_layout/'
      path: '/'
      fullPath: '/'
      preLoaderRoute: typeof ChatLayoutIndexRouteImport
      parentRoute: typeof ChatLayoutRoute
    }
    '/_chat/_layout/session/$sessionId': {
      id: '/_chat/_layout/session/$sessionId'
      path: '/session/$sessionId'
      fullPath: '/session/$sessionId'
      preLoaderRoute: typeof ChatLayoutSessionSessionIdRouteImport
      parentRoute: typeof ChatLayoutRoute
    }
  }
}

interface ChatLayoutRouteChildren {
  ChatLayoutIndexRoute: typeof ChatLayoutIndexRoute
  ChatLayoutSessionSessionIdRoute: typeof ChatLayoutSessionSessionIdRoute
}

const ChatLayoutRouteChildren: ChatLayoutRouteChildren = {
  ChatLayoutIndexRoute: ChatLayoutIndexRoute,
  ChatLayoutSessionSessionIdRoute: ChatLayoutSessionSessionIdRoute,
}

const ChatLayoutRouteWithChildren = ChatLayoutRoute._addFileChildren(
  ChatLayoutRouteChildren,
)

const rootRouteChildren: RootRouteChildren = {
  ChatLayoutRoute: ChatLayoutRouteWithChildren,
}
export const routeTree = rootRouteImport
  ._addFileChildren(rootRouteChildren)
  ._addFileTypes<FileRouteTypes>()
